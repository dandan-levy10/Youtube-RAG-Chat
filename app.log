2025-05-04 20:51:41,985 INFO     [transcription.py:21] __main__ – retrieving from cache....
2025-05-04 20:51:41,985 INFO     [transcription.py:24] __main__ – most aspiring developers make this one mistake and that's not having a road map a road map is extremely important if you want to actually reach your goals and know the topics you should be learning to eventually become in this case a python developer so in this video I'm going to share with you not just one not just two but three python road maps that actually work that will help you become a python developer now the three road maps I have cover the main things that you would do in Python so we have data science back development and devops and Automation and if you want a text based version of these road maps what you can do is simply click the link in the description and if you sign up for my newsletter I'll send it to you completely for free so with that in mind let's get into it and talk about these different road maps now regardless of which topic interests you the most there are a list of skills that are common to all of the road maps so I want to start with those now we're going to begin with just basic python or core python skills if you want to be a developer in any of these areas then you need to be comfortable writing code in Python you need to know things like if statements functions data types loops and all of those Basics that you would learn in any beginner type tutorial like the hundreds that I have for free on this channel beyond that you need to understand object-oriented programming things like classes objects Dunder methods normal methods attributes all of those things are important to understand specifically within python next I would highly recommend learning some more advanced python features and deepening your understanding of the language things like context managers decorators generators meta classes iterators all of these things are not necessary but I highly recommend them and they just make you a much better developer with a deeper understanding beyond that I'd recommend learning about threading concurrency and the global interpreter lock now python is a famously slow language and I think it's important to understand why that's the case and how you can mitigate some of those concerns with things like threading multiprocessing and really understanding what the global interpreter lock is and why it applies to the language beyond that I recommend learning some basic unit testing so looking at the built-in unit test framework as well as the P test module which you can install you don't need to be an expert but it's something that you should have some basic familiarity with next I definitely recommend looking at virtual environments and package management so being familiar with something like anaconda or VV or pip EnV or poetry just something where you can create an isolated environment to install your various Python dependencies and be familiar with how something like pip works and what python packages are next for any developer really any road map you follow you're going to need to know git and Version Control so understand the basic get commands know how to create a repository make a poll request make commits switch branches all of that fun stuff next I do recommend understanding some basic Linux and Bash scripting you don't need to be a complete expert but knowing the different commands in the terminal being comfortable working in a non-graphical user interface and just knowing kind of how to navigate your way through and use some Basics like changing directories making new files deleting searching Etc and lastly and this is a pretty big one I would definitely recommend getting some basic database understanding knowing what a SQL or relational database is and when to use it compared to something like a nosql database or a document store database again you don't need to be an expert but you want some familiarity so that you're comfortable with some of the more topics that come later in these specific road maps so those are the core skills that you need to know and if you're looking for a great resource to learn them then definitely check out today's sponsor boot. now Boot dodev is the ultimate platform for learning back and development in a way that's actually engaging unlike other courses boot dodev makes learning interactive and fun with Hands-On coding in your browser instead of passive video watching plus you can check out all of their content for free in guest mode what makes boot dodev Stand Out is that you'll earn XP unlock achievements complete quests and compete on a global leaderboard making progress feel like leveling up in a game now if you get stuck Boots the AI powered bear wizard will guide you with thought-provoking questions rather than just handing out the answers now backend development also has serious earning potential and according to stack Overflow the median backend developer in the US made over $100,000 in 202 3 now Boot dodev helps you learn these skills the right way with real world projects in Python and go and a focus on apis databases data structures and more they also offer a 30-day no questions asked refund policy course demos and a Discord Community for added support now if you're serious about leveling up your backend skills or starting your journey towards becoming a backend developer today then go to boot. deev and use my discount code Tech with Tim for 25% off your first first year on the annual plan so let's dive into it now with our data science road map again if you want to access these road maps you can do it for free from the link in the description now the first thing that we need to look at as a data scientist is some essential libraries so things like numpy and pandas for data manipulation and things like map plot lib and Seaborn for data visualization you'll also want to learn about data cleaning and pre-processing techniques because after all a data scientist works with a lot of data next you will want to know some math and statistics you can get away without being an expert but it's highly recommended to at least know some of the key terms so learn probability and statistics linear algebra things like vectors matrices Etc and then even knowing a bit of calculus and optimization with things like gradients and derivatives can be quite useful to really deepen your understanding next you want to start getting into some machine learning so learning about libraries like ssit learn for example for supervised and unsupervised learning and learning about the core machine learning algorithms things like linear regression clustering with K nearest neighbors or k means support Vector machines all of these things that really make up the foundation of machine learning beyond that you need to learn about feature engineering and model evaluation and things like hyperparameter tuning next we get into deep learning and AI once we've covered the core machine learning algorithms it's time to get a bit more complex and get into deep learning now here's where you're going to start looking at Frameworks like tensor flow or P torch really you can pick anyone that you want but you need to learn at least one of them you want to learn about things like neural networks for example and various different architectures that you can have with deep learning next you want to look at some natural language processing so things like nltk this is a python module Spacey spacy and things like Transformers and using various hugging face open-source models next I also recommend learning a bit about computer vision so things like open CV YOLO detectron 2 and then even getting a little bit into llms and not necessarily making them or training them on your own but understanding the architecture and how an llm actually works now there's obviously a lot of stuff that you can throw in here but this is more focused on data science than necessarily becoming a machine learning or AI engineer so as much as you want to be familiar with these topics you don't need to be a complete expert it's more about how you work with data and the understanding you have about how the data is used further on in the process lastly we have machine learning operations and deployment now if you are someone who really wants to get dirty with the models you want to build your own machine learning you know techniques and models and all those kinds of things then you should know how to deploy them so understanding things even like flask or fast API streamlit gradio for making things like inference servers or quick demos for working with your models can be quite useful and then lastly if you are going to do any continuous integration or deployment you can use tools like AWS Sage maker and vertex AI now here is where we can start branching into so many different topics but this is a good core list of things that you should be looking into if you want to get into data science and machine learning in Python and of course there are many many more that I cannot cover all in this video so next we get into my personal favorite road map which is for a back-end developer specifically focused more on web development now this is where python really shines and the first thing you'll want to know here in this road map is your web development Basics so yes you'll be working in Python but you should understand HTML CSS and a little bit of JavaScript so you're at least comfortable reading the code and writing little Snippets of it next you're going to want to understand core networking methods and things like HTTP and apis so you should understand what a put request is a patch request what an endpoint is what query parameters are and how the internet works at least on a surface level moving on you're going to want to learn some various backend Frameworks I would recommend you start with something like flask this is the most lightweight then move into something like Fast API which is a bit more performant and then lastly get into D Jango which is really a full stack framework that allows you to build a website completely from scratch so both the front end and the back end not just the API component which the other two mostly focus on next you're going to get into databases and ORS and an or is an object relational mapping and something that's very popular in Python for working with your core databases so you're going to want to learn definitely about SQL Alchemy this is something that works with flask fast API Etc and then the D Jango om if you're working obviously in the D Jango framework I would also recommend looking into readies for things like caching and message cues I would also look into some database optimization techniques and learn about things like indexing after databases what comes next is security and this is extremely important especially as a backend developer so first you're going to want to learn about things like JWT tokens and oo 2 various ways of Performing security via an API next you want to look into API security so things like rate limiting request cross origin resource sharing or cores and then csrf next you're going to want to look at hashing and encryption so how do you securely store sensitive data like passwords for example in a database moving on after that you're going to want to look into asynchronous programming and scalable backends so this is where you want to learn about just async programming in general in Python really all developers should know this but specifically more if you're going to be working as a developer or a web developer and looking at things like the async iio package next you're going to look at things like celery for building things like a task q and then rabid mq or Kaa for things like message Brokers this can get a little bit complicated but there's a few things you want to understand when it comes to scalability especially if you want to land a higher paying job or qualifies for some more let's call them Prestige positions next you are going to want to look into some cloud and devops so as much as these should really be separate roles backend developer compared to devops engineer a lot of times companies do expect that backend developers have some experience here so I've listed a few basic topics you'll want to at least be familiar with now the first is going to be Docker and kubernetes for containerization of your application again don't need to be an expert but you should be familiar next things like Ci and CD pipelines with things like GitHub actions or gitlab cicd after that various AWS services or Cloud providers AWS is probably the most popular but learning even about Azure or Google cloud and understanding some of the main instances or services that they have so things like ec2 instances S3 Lambda functions RDS Etc lastly you're going to want to learn about monitoring and logging you can use things like Prometheus for this okay I know this sounds like a lot of stuff you obviously don't need to learn all of this in one or two weeks or even in a few months it's a road map to last you for a long time and something you can keep working towards so you know you're making progress in the right direction anyways that is for our backend web developers now let's move on to devops and automation so we move on now to our Automation and devops road map now some of the skills here will be similar to those of a backend developer for example you would definitely want to know that last section I mentioned so things like Docker and kubernetes CI and CD pipelines AWS Services Etc and that's because as a devops engineer your job is really to deploy software through using automation so that's where a lot of these skills will come in so let's dive into it now first you're going to want to know some scripting and automation techniques so things like how to automate tasks using the OS module the subprocess module the Shu till module all of which are built into python next I would recommend learning some basic web scraping for automation tasks things like selenium playwright beautiful soup at least be familiar with these Frameworks next things like API automation so learning about the request module Puppeteer Postman essentially how do you send an automate API request to test your software next we're going to get into infrastructure as code or IAC here is where you want to look at things like terraform whether that's on AWS Google Cloud platform or Azure and then things like anible for Server automation next we move to CI and CD which is a huge part of the job so you want to know about things like Jenkins for example GitHub actions and again that gitlab CI and CD pipeline you also want to know about infrastructure monitoring again things like Prometheus and maybe grafana then we get into Cloud networking now here's where again you're going to want to be much more familiar with the cloud services AWS Azure Google Cloud platform it doesn't really matter which one you pick and every job will be using a different type of Provider so it's really just based on the kind of rules that you want to apply for and what they're mostly using next we want to learn about things like load balancers reverse proxies things like engine X and kind of how to scale our software and networking next we want to know about serverless architecture so things like AWS Lambda or gcp Cloud functions lastly we have cyber security and observability now notably I'm not great in this section so I have some things that I researched but if anyone in the comments has some more details please leave them so again logging and monitoring that's huge for cyber security and next things like security auditing and compliance if you work for big companies governments or kind of import software a lot of times you will need to meet certain security requirements and you'll have rules and regulations that you'll need to follow and the last topic I have on my list is incident response and Recovery strategies so things like how are you backing up the database how do you recover from disasters how do you respond to different instances and all of those things that most people don't think about but which are incredibly important especially as you start scaling software and building really important systems so there you go guys those are my three road maps for python Developers that actually work again if you want the text based version of this you can get it for free just click that link below and sign up for my newsletter and I'll send it to you right away if you guys enjoyed the video make sure to leave a like subscribe to the channel and I will see you in the next one [Music]
2025-05-04 20:52:50,244 INFO     [transcription.py:21] __main__ – retrieving from cache....
2025-05-04 20:52:50,244 INFO     [transcription.py:24] __main__ – most aspiring developers make this one mistake and that's not having a road map a road map is extrem
2025-05-04 20:54:05,785 INFO     [transcription.py:21] __main__ – retrieving from cache....
2025-05-04 20:54:05,785 INFO     [transcription.py:24] __main__ – most aspiring developers make this one mistake and that's not having a road map a road map is extremely important if you want to actually reach your goals and know the topics you should be learning to eventually become in this case a python developer so in this video I'm going to share with you not 
2025-05-04 21:06:25,656 INFO     [transcription.py:21] app.services.transcription – retrieving from cache....
2025-05-04 21:06:25,656 INFO     [transcription.py:24] app.services.transcription – most aspiring developers make this one mistake and that's not having a road map a road map is extremely important if you want to actually reach your goals and know the topics you should be learning to eventually become in this case a python developer so in this video I'm going to share with you not 
2025-05-04 21:42:53,560 INFO     [transcription.py:21] app.services.transcription – retrieving from cache....
2025-05-04 21:42:53,561 INFO     [transcription.py:24] app.services.transcription – most aspiring developers make this one mistake and that's not having a road map a road map is extremely important if you want to actually reach your goals and know the topics you should be learning to eventually become in this case a python developer so in this video I'm going to share with you not 
2025-05-04 21:45:00,765 INFO     [transcription.py:21] app.services.transcription – retrieving from cache....
2025-05-04 21:45:00,765 INFO     [transcription.py:24] app.services.transcription – most aspiring developers make this one mistake and that's not having a road map a road map is extremely important if you want to actually reach your goals and know the topics you should be learning to eventually become in this case a python developer so in this video I'm going to share with you not 
2025-05-04 21:47:01,250 INFO     [transcription.py:21] app.services.transcription – retrieving from cache....
2025-05-04 21:47:01,250 INFO     [transcription.py:24] app.services.transcription – most aspiring developers make this one mistake and that's not having a road map a road map is extremely important if you want to actually reach your goals and know the topics you should be learning to eventually become in this case a python developer so in this video I'm going to share with you not 
