# version: 1
# disable_existing_loggers: false

# formatters:
#   detailed:
#     format: "%(asctime)s %(levelname)-8s [%(filename)s:%(lineno)d] %(name)s - %(message)s"
#     datefmt: "%Y-%m-%d %H:%M:%S"

# handlers:
#   app_file:
#     class: logging.FileHandler
#     level: INFO
#     formatter: detailed
#     filename: app/app.log
#     encoding: utf-8

#   error_file:
#     class: logging.FileHandler
#     level: ERROR
#     formatter: detailed
#     filename: app/error.log
#     encoding: utf-8

# loggers:
#   # All log calls in your `app.*` modules go here.
#   app:
#     level: DEBUG
#     handlers: [app_file]
#     propagate: true
  
#   # silence SQLAlchemy SQL output
#   sqlalchemy.engine:
#     level: WARNING          # show only WARNING/ERROR
#     handlers: []            # no custom handler
#     propagate: false        # don’t bubble up INFO to root

#   sqlalchemy.engine.Engine:  # ← add this
#     level: WARNING
#     handlers: []            # no Stream/File handler
#     propagate: false

#   # # quiet Uvicorn startup chatter
#   # uvicorn.error:
#   #   level: WARNING
#   #   handlers: []            # let ERROR still bubble to root
#   #   propagate: true

#   # suppress per-request access lines
#   # uvicorn.access:
#   #   level: WARNING
#   #   handlers: []
#   #   propagate: true
  
    
#   httpx:
#     level: WARNING
#     handlers: []
#     propagate: true

# root:
#   # All ERROR+ from all loggers (including `app.*` and third parties)
#   level: INFO
#   handlers: [error_file]


version: 1
disable_existing_loggers: true

formatters:
  detailed:
    format: "%(asctime)s %(levelname)-8s [%(name)s:%(lineno)d] %(message)s"
    datefmt: "%Y-%m-%d %H:%M:%S"

  uvicorn_console:
    "()": "uvicorn.logging.DefaultFormatter"
    fmt: "%(levelprefix)s %(message)s"
    datefmt: "%Y-%m-%d %H:%M:%S"
    use_colors: true

handlers:
  app_file:
    class: logging.FileHandler
    level: DEBUG
    formatter: detailed
    filename: app/app.log
    encoding: utf-8

  error_file:
    class: logging.FileHandler
    level: ERROR
    formatter: detailed
    filename: app/error.log
    encoding: utf-8

  console:
    class: logging.StreamHandler
    level: INFO
    formatter: uvicorn_console
    stream: ext://sys.stderr

loggers:
  app:
    level: INFO
    handlers: [app_file]
    propagate: true

  uvicorn.error:
    level: INFO
    handlers: [console]
    propagate: True

  uvicorn.access:
    level: INFO
    handlers: [console]
    propagate: True

  httpx:
    level: WARNING
    handlers: []
    propagate: true

root:
  level: ERROR
  handlers: [error_file]

